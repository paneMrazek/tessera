<!DOCTYPE html>
<html>
	<head>
		<title><%= title %></title>
		<link rel='stylesheet' href='/stylesheets/style.css' />
		<style type="text/css">
			body {
				/*background-color: #333333;*/
				margin: 0px;
				overflow: hidden;
				-moz-user-select: none;
				-webkit-user-select: none;
				-ms-user-select: none;
				-khtml-user-select: none;
				user-select: none;
			}
			#container {
				width: 1003px;
				margin-top: 50px;
				margin-left: -501px;
				left: 50%;
				position: absolute;
			}
			#testCanvas {
				/*background: #000;*/
			}

			html body{
				margin:0px;
				padding:0px;
				width:100%;
				height:100%;
			}
		</style>
	</head>
	<body>
		<!-- <div id="container"> -->
			<canvas id="testCanvas"></canvas>
		<!-- </div>		 -->
	</body>
	<script type="text/javascript" src="/javascripts/proton.js"></script>
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
	<script>
		var canvas;
		var context;
		var proton;
		var renderer;
		var emitter;
		var stats;
		var mouseObj;
		var bgImg;
		var repulsionBehaviour, crossZoneBehaviour;

		Main();
		function Main() {
			canvas = document.getElementById("testCanvas");
			canvas.width = window.innerWidth * 0.985;
			canvas.height = window.innerHeight * 0.99;
			context = canvas.getContext('2d');
			context.canvas.width  = window.innerWidth * 0.985;
			context.canvas.height = window.innerHeight * 0.99;
			// loadImage();
			beginScene();
		}

		function beginScene() {
			createProton();
			createRenderer();
			tick();
			canvas.addEventListener('mousemove', mousemoveHandler, false);
		}

		function loadImage() {
			var image = new Image();
			image.onload = function(e) {
				bgImg = e.target;
				beginScene();
			}
			image.src = "http://a-jie.github.io/Proton/example/behaviour/repulsion/image/bg.jpg";
			image.width = canvas.width;
			image.height = canvas.height;
		}

		function createProton() {
			proton = new Proton;
			emitter = new Proton.Emitter();
			emitter.damping = 0.0075;
			emitter.rate = new Proton.Rate(180);
			emitter.addInitialize(new Proton.ImageTarget('http://a-jie.github.io/Proton/example/behaviour/repulsion/image/particle.png', 32));
			emitter.addInitialize(new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height)));
			emitter.addInitialize(new Proton.Mass(1), new Proton.Radius(Proton.getSpan(5, 10)));
			mouseObj = {
				x : canvas.width / 2,
				y : canvas.height / 2
			};
			repulsionBehaviour = new Proton.Repulsion(mouseObj, 0, 0);
			crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(-2, 0, canvas.width, canvas.height), 'cross');
			emitter.addBehaviour(repulsionBehaviour, crossZoneBehaviour);
			emitter.addBehaviour(new Proton.Scale(Proton.getSpan(.1, .6)));
			emitter.addBehaviour(new Proton.Alpha(.5));
			emitter.addBehaviour(new Proton.RandomDrift(10, 10, .2));
			emitter.addBehaviour({
				initialize : function(particle) {
					particle.tha = Math.random() * Math.PI;
					particle.thaSpeed = 0.015 * Math.random() + 0.005;
				},

				applyBehaviour : function(particle) {
					particle.tha += particle.thaSpeed;
					particle.alpha = Math.abs(Math.cos(particle.tha));
				}
			});
			emitter.emit('once');
			proton.addEmitter(emitter);
		}

		function mousemoveHandler(e) {
			if (e.layerX || e.layerX == 0) {
				mouseObj.x = e.layerX;
				mouseObj.y = e.layerY;
			} else if (e.offsetX || e.offsetX == 0) {
				mouseObj.x = e.offsetX;
				mouseObj.y = e.offsetY;
			}

			repulsionBehaviour.reset(mouseObj, 5, 100);
		}

		function createRenderer() {
			renderer = new Proton.Renderer('canvas', proton, canvas);
			renderer.onProtonUpdate = function() {
				// if (bgImg)
					context.clearRect(0, 0, canvas.width, canvas.height);
			};
			renderer.start();
		}

		function tick() {
			requestAnimationFrame(tick);
			proton.update();
		}
	</script>
</html>